package defpackage;

/* compiled from: PG */
/* renamed from: cit  reason: default package */
/* loaded from: classes.dex */
public final class cit {
    public static final cio A;
    public static final cio B;
    public static final cio C;
    public static final cio D;
    public static final cio E;
    public static final cio F;
    public static final cio G;
    public static final cio H;
    public static final cio I;
    public static final cio J;
    public static final cio K;
    public static final cio L;
    public static final cio M;
    public static final cio N;
    public static final cio O;
    public static final cio P;
    public static final cio Q;
    public static final cio R;
    public static final cio S;
    public static final cio T;
    public static final cio U;
    public static final cio V;
    public static final cio W;
    public static final cio X;
    public static final cio Y;
    public static final cio Z;
    public static final ciq a;
    public static final cio aa;
    public static final cio ab;
    public static final cio ac;
    public static final cio ad;
    public static final cio ae;
    public static final cio af;
    public static final cio ag;
    public static final cio ah;
    public static final cio ai;
    public static final cio aj;
    public static final cio ak;
    public static final cio al;
    public static final cio am;
    public static final cio an;
    public static final cio ao;
    public static final cio ap;
    public static final cio aq;
    public static final cio ar;
    public static final cio as;
    public static final cio at;
    public static final cio au;
    public static final ciq b;
    public static final ciq c;
    public static final ciq d;
    public static final ciq e;
    public static final ciq f;
    public static final ciq g;
    public static final ciq h;
    public static final ciq i;
    public static final ciq j;
    public static final ciq k;
    public static final ciq l;
    public static final cio m;
    public static final cio n;
    public static final cio o;
    public static final cio p;
    public static final cio q;
    public static final cio r;
    public static final cio s;
    public static final cio t;
    public static final cio u;
    public static final cio v;
    public static final cio w;
    public static final cio x;
    public static final cio y;
    public static final cio z;

    static {
        cip cipVar = new cip();
        cipVar.a = "camera.bind_assistant";
        m = cipVar.h();
        cip cipVar2 = new cip();
        cipVar2.a = "camera.audio_zoom";
        cipVar2.b();
        cip cipVar3 = new cip();
        cipVar3.a = "camera.flash.ind";
        n = cipVar3.g();
        cip cipVar4 = new cip();
        cipVar4.a = "camera.auto_fps_default";
        o = cipVar4.h();
        cip cipVar5 = new cip();
        cipVar5.a = "camera.auto_fps";
        p = cipVar5.e();
        cip cipVar6 = new cip();
        cipVar6.a = "avc_profile_high_supported";
        q = cipVar6.i();
        cip cipVar7 = new cip();
        cipVar7.a = "back_flash_off_by_default";
        r = cipVar7.i();
        cip cipVar8 = new cip();
        cipVar8.a = "blacklisted_resolutions_back";
        s = cipVar8.n();
        cip cipVar9 = new cip();
        cipVar9.a = "blacklisted_resolutions_front";
        t = cipVar9.n();
        cip cipVar10 = new cip();
        cipVar10.a = "blacklisted_preview_resolutions_back";
        u = cipVar10.n();
        cip cipVar11 = new cip();
        cipVar11.a = "blacklisted_preview_resolutions_front";
        v = cipVar11.n();
        cip cipVar12 = new cip();
        cipVar12.a = "camera.narrow_cam";
        cipVar12.f();
        cip cipVar13 = new cip();
        cipVar13.a = "camera.wide_cam";
        cipVar13.f();
        cip cipVar14 = new cip();
        cipVar14.a = "camera.wide_zoom";
        w = cipVar14.h();
        cip cipVar15 = new cip();
        cipVar15.a = "camera.partial_load";
        x = cipVar15.g();
        cip cipVar16 = new cip();
        cipVar16.a = "capture_mode_ui_startup_wait_for_view_finder";
        y = cipVar16.i();
        cip cipVar17 = new cip();
        cipVar17.a = "camera.chk_anim_trnstns";
        cipVar17.b();
        cip cipVar18 = new cip();
        cipVar18.a = "camera.clearcut_debug";
        cipVar18.f();
        cip cipVar19 = new cip();
        cipVar19.a = "contact_us_mailing_list_address_default";
        z = cipVar19.m();
        cip cipVar20 = new cip();
        cipVar20.a = "contact_us_mailing_list_address_for_droid_canary_and_fishfood";
        A = cipVar20.m();
        cip cipVar21 = new cip();
        cipVar21.a = "contact_us_mailing_list_address_for_google_food";
        B = cipVar21.m();
        cip cipVar22 = new cip();
        cipVar22.a = "camera.vid_meta_fatal";
        cipVar22.c();
        cip cipVar23 = new cip();
        cipVar23.a = "camera.developer.enable";
        cipVar23.d();
        cip cipVar24 = new cip();
        cipVar24.a = "camera.fake_therm_state";
        a = cipVar24.a();
        cip cipVar25 = new cip();
        cipVar25.a = "camera.ignore_temp";
        cipVar25.f();
        cip cipVar26 = new cip();
        cipVar26.a = "early_focus_unlock";
        C = cipVar26.h();
        cip cipVar27 = new cip();
        cipVar27.a = "easel_environment_enabled";
        D = cipVar27.i();
        cip cipVar28 = new cip();
        cipVar28.a = "camera.elmyra_lens";
        cipVar28.f();
        cip cipVar29 = new cip();
        cipVar29.a = "camera.elmyra_assist";
        cipVar29.f();
        cip cipVar30 = new cip();
        cipVar30.a = "camera.artemis";
        E = cipVar30.e();
        cip cipVar31 = new cip();
        cipVar31.a = "camera.debug_hw_ver";
        cipVar31.b();
        cip cipVar32 = new cip();
        cipVar32.a = "exif_model_make_sanitization_enabled";
        F = cipVar32.i();
        cip cipVar33 = new cip();
        cipVar33.a = "camera.exp.activity";
        cipVar33.f();
        cip cipVar34 = new cip();
        cipVar34.a = "camera.faceannouncer";
        G = cipVar34.g();
        cip cipVar35 = new cip();
        cipVar35.a = "camera.faceboxes";
        cipVar35.f();
        cip cipVar36 = new cip();
        cipVar36.a = "camera.first_preview_frame";
        b = cipVar36.a();
        cip cipVar37 = new cip();
        cipVar37.a = "camera.debug.overlay";
        cipVar37.c();
        cip cipVar38 = new cip();
        cipVar38.a = "camera.debug.overlay_info_def";
        cipVar38.c();
        cip cipVar39 = new cip();
        cipVar39.a = "camera.debug.overlay_info_ff";
        cipVar39.c();
        cip cipVar40 = new cip();
        cipVar40.a = "filmstrip_tiny_bounds";
        c = cipVar40.a();
        cip cipVar41 = new cip();
        cipVar41.a = "filmstrip_maximum_full_res_pixels";
        d = cipVar41.a();
        cip cipVar42 = new cip();
        cipVar42.a = "filmstrip_maximum_smooth_pixels";
        e = cipVar42.a();
        cip cipVar43 = new cip();
        cipVar43.a = "camera.focus.debug";
        cipVar43.f();
        cip cipVar44 = new cip();
        cipVar44.a = "camera.front.flashColor";
        f = cipVar44.a();
        cip cipVar45 = new cip();
        cipVar45.a = "camera.front.backgroundIlluminationColor";
        g = cipVar45.a();
        cip cipVar46 = new cip();
        cipVar46.a = "camera.front.viewfinderIlluminationColor";
        h = cipVar46.a();
        cip cipVar47 = new cip();
        cipVar47.a = "camera.front.translucentSelfieIllumination";
        H = cipVar47.h();
        cip cipVar48 = new cip();
        cipVar48.a = "google_lens_enabled";
        I = cipVar48.h();
        cip cipVar49 = new cip();
        cipVar49.a = "max_lens_blur_count";
        i = cipVar49.a();
        cip cipVar50 = new cip();
        cipVar50.a = "lens_blur_megapixels";
        j = cipVar50.a();
        cip cipVar51 = new cip();
        cipVar51.a = "google_lens_min_supported_photos_app_version";
        J = cipVar51.n();
        cip cipVar52 = new cip();
        cipVar52.a = "high_performance_ipe_supported";
        K = cipVar52.i();
        cip cipVar53 = new cip();
        cipVar53.a = "hybrid_ae_only_ois_jitter_for_back_camera_enabled";
        L = cipVar53.i();
        cip cipVar54 = new cip();
        cipVar54.a = "hybrid_ae_supported";
        M = cipVar54.i();
        cip cipVar55 = new cip();
        cipVar55.a = "camera.enable_lkcnry";
        N = cipVar55.g();
        cip cipVar56 = new cip();
        cipVar56.a = "camera.use_local_logger";
        O = cipVar56.h();
        cip cipVar57 = new cip();
        cipVar57.a = "camera.use_perf_logger";
        P = cipVar57.h();
        cip cipVar58 = new cip();
        cipVar58.a = "max_allowed_native_memory_mb";
        k = cipVar58.a();
        cip cipVar59 = new cip();
        cipVar59.a = "measure_integration_enabled";
        Q = cipVar59.h();
        cip cipVar60 = new cip();
        cipVar60.a = "ois_api_supported";
        R = cipVar60.i();
        cip cipVar61 = new cip();
        cipVar61.a = "ois_api_version";
        S = cipVar61.j();
        cip cipVar62 = new cip();
        cipVar62.a = "camera.onscreen_logcat";
        T = cipVar62.f();
        cip cipVar63 = new cip();
        cipVar63.a = "camera.onscreen_log";
        U = cipVar63.f();
        cip cipVar64 = new cip();
        cipVar64.a = "selfie_mirror_log";
        cipVar64.f();
        cip cipVar65 = new cip();
        cipVar65.a = "p_or_higher";
        V = cipVar65.i();
        cip cipVar66 = new cip();
        cipVar66.a = "perfetto_trigger";
        cipVar66.b();
        cip cipVar67 = new cip();
        cipVar67.a = "camera.prod_testing";
        W = cipVar67.h();
        cip cipVar68 = new cip();
        cipVar68.a = "camera.progress_overlay";
        X = cipVar68.g();
        cip cipVar69 = new cip();
        cipVar69.a = "refocus_face_enabled";
        Y = cipVar69.h();
        cip cipVar70 = new cip();
        cipVar70.a = "mcfly_enabled";
        cipVar70.f();
        cip cipVar71 = new cip();
        cipVar71.a = "camera.enable_rocky";
        cipVar71.f();
        cip cipVar72 = new cip();
        cipVar72.a = "camera.shot_tracking";
        cipVar72.f();
        cip cipVar73 = new cip();
        cipVar73.a = "pd_calibration_data_supported";
        Z = cipVar73.i();
        cip cipVar74 = new cip();
        cipVar74.a = "camera.60fps";
        aa = cipVar74.e();
        cip cipVar75 = new cip();
        cipVar75.a = "unflipped_selfie_default";
        ab = cipVar75.h();
        cip cipVar76 = new cip();
        cipVar76.a = "camera_slow_launch_trigger_ms";
        cipVar76.b = "General";
        l = cipVar76.a();
        cip cipVar77 = new cip();
        cipVar77.a = "enable_social_share";
        cipVar77.b = "SocialShare";
        ac = cipVar77.h();
        cip cipVar78 = new cip();
        cipVar78.a = "camera.obfuscation_share_enabled";
        ad = cipVar78.i();
        cip cipVar79 = new cip();
        cipVar79.a = "squeeze_supported";
        ae = cipVar79.i();
        cip cipVar80 = new cip();
        cipVar80.a = "camera.strict_vm";
        cipVar80.c();
        cip cipVar81 = new cip();
        cipVar81.a = "camera.syshealth_info";
        cipVar81.f();
        cip cipVar82 = new cip();
        cipVar82.a = "camera.dbg.bugtoast";
        cipVar82.c();
        cip cipVar83 = new cip();
        cipVar83.a = "camera.skip_oobe";
        cipVar83.f();
        cip cipVar84 = new cip();
        cipVar84.a = "camera.use_photos";
        af = cipVar84.h();
        cip cipVar85 = new cip();
        cipVar85.a = "camera.vfe.poc_gray";
        cipVar85.c();
        cip cipVar86 = new cip();
        cipVar86.a = "camera.vfe.debugbar";
        cipVar86.c();
        cip cipVar87 = new cip();
        cipVar87.a = "camera.auto_timer_enabled";
        ag = cipVar87.h();
        cip cipVar88 = new cip();
        cipVar88.a = "camera.use_pck_main";
        ah = cipVar88.g();
        cip cipVar89 = new cip();
        cipVar89.a = "camera.use_pck_portrait";
        ai = cipVar89.g();
        cip cipVar90 = new cip();
        cipVar90.a = "camera.use_pck_night";
        aj = cipVar90.g();
        cip cipVar91 = new cip();
        cipVar91.a = "camera.use_pck_intent";
        ak = cipVar91.g();
        cip cipVar92 = new cip();
        cipVar92.a = "use_pck_storage";
        cipVar92.f();
        cip cipVar93 = new cip();
        cipVar93.a = "unflipped_selfie_enabled";
        al = cipVar93.h();
        cip cipVar94 = new cip();
        cipVar94.a = "use_physical_raw";
        am = cipVar94.h();
        cip cipVar95 = new cip();
        cipVar95.a = "camera.pck_large_yuv";
        an = cipVar95.h();
        cip cipVar96 = new cip();
        cipVar96.a = "use_minimal_q_storage_v2";
        cipVar96.d();
        cip cipVar97 = new cip();
        cipVar97.a = "camera.no_media_type_none_on_q_or_above";
        ao = cipVar97.h();
        cip cipVar98 = new cip();
        cipVar98.a = "use_immersive_rounded_corners";
        ap = cipVar98.i();
        cip cipVar99 = new cip();
        cipVar99.a = "camera.ddepth_rear";
        aq = cipVar99.h();
        cip cipVar100 = new cip();
        cipVar100.a = "camera.ddepth_front";
        cipVar100.b();
        cip cipVar101 = new cip();
        cipVar101.a = "camera.ddepth_front_postprocess";
        cipVar101.b();
        cip cipVar102 = new cip();
        cipVar102.a = "camera.ddepth_debug";
        cipVar102.b();
        cip cipVar103 = new cip();
        cipVar103.a = "camera.ddepth_preference_override";
        ar = cipVar103.h();
        cip cipVar104 = new cip();
        cipVar104.a = "camera.ddepth_rear_use_opencl";
        cipVar104.d();
        cip cipVar105 = new cip();
        cipVar105.a = "camera.alloc_tracker";
        cipVar105.c();
        cip cipVar106 = new cip();
        cipVar106.a = "camera.custom_hotkeys";
        cipVar106.c();
        cip cipVar107 = new cip();
        cipVar107.a = "camera.no_low_fb";
        as = cipVar107.h();
        cip cipVar108 = new cip();
        cipVar108.a = "camera.log_frame_availability";
        cipVar108.f();
        cip cipVar109 = new cip();
        cipVar109.a = "camera.allow_haptics";
        at = cipVar109.h();
        cip cipVar110 = new cip();
        cipVar110.a = "camera.allow_fine_haptics";
        au = cipVar110.h();
        cip cipVar111 = new cip();
        cipVar111.a = "camera.jankmonitor_full";
        cipVar111.b();
        cip cipVar112 = new cip();
        cipVar112.a = "camera.sparrow";
        cipVar112.f();
        cip cipVar113 = new cip();
        cipVar113.a = "camera.crash_unknown_thermal_status";
        cipVar113.b();
    }
}
