package defpackage;

/* compiled from: PG */
/* renamed from: ciu  reason: default package */
/* loaded from: classes.dex */
public final class ciu {
    public static final cio A;
    public static final cio B;
    public static final cio C;
    public static final ciq a;
    public static final ciq b;
    public static final ciq c;
    public static final ciq d;
    public static final ciq e;
    public static final ciq f;
    public static final ciq g;
    public static final ciq h;
    public static final ciq i;
    public static final ciq j;
    public static final ciq k;
    public static final cio l;
    public static final cio m;
    public static final cio n;
    public static final cio o;
    public static final cio p;
    public static final cio q;
    public static final cio r;
    public static final cio s;
    public static final cio t;
    public static final cio u;
    public static final cio v;
    public static final cio w;
    public static final cio x;
    public static final cio y;
    public static final cio z;

    static {
        cip cipVar = new cip();
        cipVar.a = "AWB_FOR_HDR_PLUS_ENHANCED";
        l = cipVar.i();
        cip cipVar2 = new cip();
        cipVar2.a = "camera.3a.debug_meta";
        cipVar2.c = psl.a(0, 1, 2, 3);
        a = cipVar2.a();
        cip cipVar3 = new cip();
        cipVar3.a = "camera.cuttle.motion_ef";
        m = cipVar3.g();
        cip cipVar4 = new cip();
        cipVar4.a = "camera.cuttle.extended";
        n = cipVar4.h();
        cip cipVar5 = new cip();
        cipVar5.a = "camera.cuttle.sky";
        o = cipVar5.h();
        cip cipVar6 = new cip();
        cipVar6.a = "camera.cuttle.average";
        cipVar6.f();
        cip cipVar7 = new cip();
        cipVar7.a = "camera.cuttle.maxexpsec";
        p = cipVar7.l();
        cip cipVar8 = new cip();
        cipVar8.a = "camera.cuttle.extended_iterable_burst";
        q = cipVar8.h();
        cip cipVar9 = new cip();
        cipVar9.a = "camera.3a_conv";
        r = cipVar9.h();
        cip cipVar10 = new cip();
        cipVar10.a = "camera.paneer";
        cipVar10.f();
        cip cipVar11 = new cip();
        cipVar11.a = "camera.extburst.RESTART";
        cipVar11.f();
        cip cipVar12 = new cip();
        cipVar12.a = "camera.gcam_awb_force";
        cipVar12.f();
        cip cipVar13 = new cip();
        cipVar13.a = "camera.gcam_awb_allowed";
        s = cipVar13.i();
        cip cipVar14 = new cip();
        cipVar14.a = "gcam.psaf_frame_count";
        cipVar14.c = ppp.a(puu.b((Comparable) 0, (Comparable) 10), (ppz) ppy.a);
        b = cipVar14.a();
        cip cipVar15 = new cip();
        cipVar15.a = "gcam.psaf_sb_thresh";
        t = cipVar15.l();
        cip cipVar16 = new cip();
        cipVar16.a = "gcam_capture_thread_count";
        c = cipVar16.a();
        cip cipVar17 = new cip();
        cipVar17.a = "gcam_merge_thread_count";
        d = cipVar17.a();
        cip cipVar18 = new cip();
        cipVar18.a = "gcam_finish_thread_count";
        e = cipVar18.a();
        cip cipVar19 = new cip();
        cipVar19.a = "gcam.zsl_buffer_size";
        f = cipVar19.a();
        cip cipVar20 = new cip();
        cipVar20.a = "camera.hdr_hvx";
        u = cipVar20.g();
        cip cipVar21 = new cip();
        cipVar21.a = "gcam.max_burst_size";
        g = cipVar21.a();
        cip cipVar22 = new cip();
        cipVar22.a = "camera.p3_available";
        v = cipVar22.g();
        cip cipVar23 = new cip();
        cipVar23.a = "camera.p3_force";
        cipVar23.f();
        cip cipVar24 = new cip();
        cipVar24.a = "SABRE_ALLOWED";
        w = cipVar24.i();
        cip cipVar25 = new cip();
        cipVar25.a = "camera.sabre_force";
        cipVar25.f();
        cip cipVar26 = new cip();
        cipVar26.a = "SABRE_UNZOOMED_ALL";
        cipVar26.f();
        cip cipVar27 = new cip();
        cipVar27.a = "SABRE_UNZOOMED_TELEPHOTO";
        x = cipVar27.i();
        cip cipVar28 = new cip();
        cipVar28.a = "SABRE_UNZOOMED_NIGHTMODE";
        y = cipVar28.i();
        cip cipVar29 = new cip();
        cipVar29.a = "camera.slowraw";
        cipVar29.f();
        cip cipVar30 = new cip();
        cipVar30.a = "POST_CAPTURE_TEMPORAL_BINNING";
        z = cipVar30.i();
        cip cipVar31 = new cip();
        cipVar31.a = "gcam.zsl_ns";
        A = cipVar31.h();
        cip cipVar32 = new cip();
        cipVar32.a = "gcam.zsl_ns.forcedtbfactor";
        h = cipVar32.a();
        cip cipVar33 = new cip();
        cipVar33.a = "camera.hdrnet";
        B = cipVar33.i();
        cip cipVar34 = new cip();
        cipVar34.a = "camera.hdrnet.height";
        i = cipVar34.a();
        cip cipVar35 = new cip();
        cipVar35.a = "camera.nonzsl_extended_base_frame_selection";
        C = cipVar35.g();
        cip cipVar36 = new cip();
        cipVar36.a = "gcam.vf.verbose";
        cipVar36.f();
        cip cipVar37 = new cip();
        cipVar37.a = "gcam.sabre_burst_size";
        j = cipVar37.a();
        cip cipVar38 = new cip();
        cipVar38.a = "gcam.temporal_binning_burst_size";
        k = cipVar38.a();
    }
}
