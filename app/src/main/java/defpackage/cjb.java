package defpackage;

/* compiled from: PG */
/* renamed from: cjb  reason: default package */
/* loaded from: classes.dex */
public final class cjb {
    public static final ciq a;
    public static final ciq b;
    public static final ciq c;
    public static final ciq d;
    public static final ciq e;
    public static final ciq f;
    public static final ciq g;
    public static final cio h;
    public static final cio i;
    public static final cio j;
    public static final cio k;
    public static final cio l;
    public static final cio m;
    public static final cio n;
    public static final cio o;
    public static final cio p;
    public static final cio q;
    public static final cio r;
    public static final cio s;
    public static final cio t;
    public static final cio u;
    public static final cio v;
    public static final cio w;
    public static final cio x;

    static {
        cip cipVar = new cip();
        cipVar.a = "face_detect_mode_use_extended";
        h = cipVar.i();
        cip cipVar2 = new cip();
        cipVar2.a = "global_imagereader_ticket_limit";
        cipVar2.a();
        cip cipVar3 = new cip();
        cipVar3.a = "max_hdr_plus_imagereader_image_count";
        a = cipVar3.a();
        cip cipVar4 = new cip();
        cipVar4.a = "max_hdr_plus_burst_frame_count";
        b = cipVar4.a();
        cip cipVar5 = new cip();
        cipVar5.a = "max_imagereader_image_count";
        c = cipVar5.a();
        cip cipVar6 = new cip();
        cipVar6.a = "pd_image_format_is_raw_depth";
        i = cipVar6.i();
        cip cipVar7 = new cip();
        cipVar7.a = "camera.auto_hdrp_conf";
        cipVar7.f();
        cip cipVar8 = new cip();
        cipVar8.a = "camera.hdrp_conf";
        cipVar8.f();
        cip cipVar9 = new cip();
        cipVar9.a = "camera.f_tuning";
        cipVar9.c = psl.a(0, 1, 2);
        d = cipVar9.a();
        cip cipVar10 = new cip();
        cipVar10.a = "bgae.enabled";
        j = cipVar10.g();
        cip cipVar11 = new cip();
        cipVar11.a = "photo_pixel_2016_config";
        k = cipVar11.i();
        cip cipVar12 = new cip();
        cipVar12.a = "photo_pixel_2017_config";
        l = cipVar12.i();
        cip cipVar13 = new cip();
        cipVar13.a = "photo_pixel_2018_config";
        m = cipVar13.i();
        cip cipVar14 = new cip();
        cipVar14.a = "photo_pixel_2019_config";
        n = cipVar14.i();
        cip cipVar15 = new cip();
        cipVar15.a = "photo_pixel_2019_midrange_config";
        o = cipVar15.i();
        cip cipVar16 = new cip();
        cipVar16.a = "gcam.sm.denom";
        e = cipVar16.a();
        cip cipVar17 = new cip();
        cipVar17.a = "gcam.sm.denom_night";
        f = cipVar17.a();
        cip cipVar18 = new cip();
        cipVar18.a = "gcam.sm.denom_night_limited";
        g = cipVar18.a();
        cip cipVar19 = new cip();
        cipVar19.a = "gcam.sm.enabled";
        p = cipVar19.h();
        cip cipVar20 = new cip();
        cipVar20.a = "gcam.sm.log";
        q = cipVar20.h();
        cip cipVar21 = new cip();
        cipVar21.a = "gcam.debug";
        r = cipVar21.h();
        cip cipVar22 = new cip();
        cipVar22.a = "camera.hwhdr_intent";
        s = cipVar22.h();
        cip cipVar23 = new cip();
        cipVar23.a = "camera.hwhdr_inapp";
        cipVar23.f();
        cip cipVar24 = new cip();
        cipVar24.a = "camera.raw_mode";
        t = cipVar24.h();
        cip cipVar25 = new cip();
        cipVar25.a = "portrait_use_pd";
        u = cipVar25.i();
        cip cipVar26 = new cip();
        cipVar26.a = "portrait_use_stereo";
        v = cipVar26.i();
        cip cipVar27 = new cip();
        cipVar27.a = "portrait_use_ml";
        w = cipVar27.i();
        cip cipVar28 = new cip();
        cipVar28.a = "simultaneous_af_ae_trigger_supported";
        x = cipVar28.i();
    }
}
